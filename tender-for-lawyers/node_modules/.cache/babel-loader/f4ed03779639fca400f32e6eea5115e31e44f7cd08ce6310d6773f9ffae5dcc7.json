{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadshaqqou/Projects/Knight-Hacks-2025/tender-for-lawyers/src/components/ProtectedRoute/ProtectedRoute.tsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  isAuthenticated,\n  children\n}) => {\n  if (!isAuthenticated) {\n    // Redirect to login page if not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","isAuthenticated","children","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ahmadshaqqou/Projects/Knight-Hacks-2025/tender-for-lawyers/src/components/ProtectedRoute/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\n\ninterface ProtectedRouteProps {\n  isAuthenticated: boolean;\n  children: React.ReactNode;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \n  isAuthenticated, \n  children \n}) => {\n  if (!isAuthenticated) {\n    // Redirect to login page if not authenticated\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO5C,MAAMC,cAA6C,GAAGA,CAAC;EACrDC,eAAe;EACfC;AACF,CAAC,KAAK;EACJ,IAAI,CAACD,eAAe,EAAE;IACpB;IACA,oBAAOJ,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,oBAAOX,OAAA,CAAAE,SAAA;IAAAG,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACO,EAAA,GAVIT,cAA6C;AAYnD,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}